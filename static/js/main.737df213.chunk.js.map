{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"wzBAIaA,G,4BAAO,SAACC,GAAD,OAClB,yBAAKC,UAAU,kBACb,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCHTC,EAAW,SAACR,GAAD,OACtB,yBAAKC,UAAU,aACZD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCJzBQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,2BACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6CCG,E,YA5Cb,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRc,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALE,E,iFAWE,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAWjC,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,yBAAK/B,UAAU,OACb,+CACA,kBAAC,EAAD,CACEa,aAAce,KAAKf,aACnBD,YAAY,oBAEd,kBAAC,EAAD,CAAUJ,SAAUqB,S,GAvCVI,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.737df213.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n)\n","import React from 'react';\nimport './card-list.styles.css'\n\nimport  { Card } from '../card/card.component';\n\nexport const CardList = (props) => (\n  <div className='card-list'>\n    {props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n)\n","import React from 'react'\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className='search'\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n)\n","import React, { Component } from 'react';\nimport './App.css';\nimport Monster from './monsters.json'\nimport { Header } from './components/Header'\nimport { SearchCard } from './components/SearchCard';\nimport { Cards } from './components/Cards'\nimport { CardList } from './components/card-list/card-list.component'\nimport  { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }))\n  }\n\n  handleChange = (e) =>  {\n    this.setState({ searchField: e.target.value})\n  }\n\n  // handleChange(e) {\n  //   this.setState({ searchField: e.target.value})\n  // }\n  \n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className='App'>\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          handleChange={this.handleChange}\n          placeholder='search monsters'\n        />\n        <CardList monsters={filteredMonsters} />\n      </div> \n    )\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}